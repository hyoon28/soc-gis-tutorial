[["index.html", "Spatial Data and Mapping for Sociologists Chapter 1 About 1.1 Spatial Data and Analysis", " Spatial Data and Mapping for Sociologists Hesu Yoon Last updated: 2024-10-21 Chapter 1 About The social life is embedded in space. The advent of digital technology, once believed to jeopardize the significance of space, mediates and reconfigures how people experience and navigate places. From pandemic to climate change to globalizing gentrification and migration, there are abundant sociological inquiries that require the understanding of how social groups, institutions, and resources are spatially organized. This module is designed to equip students with tools that help them explore these topics. The following is a series of tutorials prepared for the Spatial Data and Mapping module from Advanced Quantitative Methods in Contemporary Sociology course taught at ENSAE Paris. This module specifically aims to teach students how to gather, process, and visualize spatial data for sociological research. Some prior experience or familiarity with quantitative data and R/R Studio is necessary to follow the tutorials. However, no prior experience in spatial data and/or software is assumed. Before the class, make sure you have R/R studio installed. You can download all the data used in the tutorials here. Each tutorial is a chapter in this website. You can navigate through the chapters using the sidebar. 1.1 Spatial Data and Analysis Spatial data refers to data representing features or objects on the Earth’s surface. Whether it’s man-made or natural, if it has to do with a specific location on the surface of the Earth, it is spatial. Spatial data is typically classified into two types: Vector data and raster data. Vector data consists of coordinate information, while raster data is all about layers of images extracted from camera sensors. Types of Spatial Data In this series of tutorials, we focus on the vector data type. There are three forms of vector data. - Points: A single dot, expressed as a coordinate (e.g., landmarks). - Lines: A line defined by two coordinates, with a definite length (e.g., roads, rivers) - Polygons: A closed shape is defined using three or more coordinates, representing areas (neighborhood boundaries). Spatial data contains more information than just a location on the surface of the Earth represented by vector data. Any additional information, or non-spatial data, that describes a feature is referred to as an attribute. Sociologists utilize a variety of non-spatial data, such as demographic and socioeconomic data linked to particular locales. In addition to locational and attribute information, spatial data inherently contains geometric and topological properties, which help to gain deeper insights. Geometric properties include position and measurements, such as length, direction, area, and volume. Topological properties represent spatial relationships such as connectivity, inclusion, and adjacency. Spatial data analytics involves collecting, processing, and analyzing various types of spatial data with insights to go beyond what occurs to determine not only where and when something occurs but also why it occurs at that specific place and/or time. It can be further viewed as descriptive analytics, which involves summarizing and visualizing spatial data to identify patterns and trends. GIS (Geographic Information Systems) connects data to a map, integrating location data with all types of descriptive information. It helps us understand patterns, relationships, and geographic context. While there are multiple tools to carry out spatial analysis, we will use R in this tutorial. R provides sufficient spatial packages prepared for data manipulation, visualization, and analysis for social scientists. It can also be readily linked with more traditional statistical analysis. Last but not least, using R is helpful for open science and replication, which is increasingly important in social science research. Tools for Spatial Analysis "],["emplacing-demographic-data.html", "Chapter 2 Emplacing Demographic Data 2.1 Defining boundaries 2.2 Joining attributes 2.3 Data visualization", " Chapter 2 Emplacing Demographic Data In this chapter, we will discuss demographic data nested in places, which is often used in sociological research. Sociologists often study where people live and move to. Topics like migration, segregation, gentrification, integration/assimilation, and diversity/fractionalization can be studied using aggregated demographic data for a given geographic unit. To conduct such analysis, defining a geographic unit and boundary suitable for your research question is critical. 2.1 Defining boundaries Geographic boundaries can be defined and drawn at various levels, from nations to cities to neighborhoods. Territories are contested and (re)defined through social processes, therefore, it is important to clearly define and justify your choice of spatial boundary as a unit of analysis. Urban sociologists, for instance, tend to focus on studying neighborhood dynamics. But what are neighborhoods? While government-defined census tracts are often used as a proxy for neighborhoods in quantitative social science research, some scholars choose to analyze other types of boundaries, such as “community areas” that are more meaningful to its residents. THE CASE OF SAN FRANCISCO Let’s demonstrate the importance of defining neighborhood boundaries using the case of San Francisco. San Francisco’s neighborhood names and boundaries have changed over time (1) and the current names and boundaries are often inconsistently perceived and administered (2). Source: SFGATE In this tutorial, I visualize San Francisco neighborhoods based on census tracts as well as the “Analysis Neighborhood” created by the city officials. Many US city governments provide their local data through Open Data websites, including San Francisco’s DataSF. You want to look for “Geographic Locations &amp; Boundaries” tab. DataSF is an open data website provided by the city government of San Francisco Under this tab, you will find the 2010 census tract and “Analysis Neighborhood” boundaries, among many other geographic data. Geographic boundaries data can come in various formats, like geojson, shapefiles, etc. In this tutorial, we use geojson files. Geographic boundaries are “polygons” We use sf package in R to handle spatial data. Set up and import geojson files. # First, you will have to set up by installing and calling the sf package. library(sf) # Import neighborhood boundaries data (polygons) sfnh &lt;- st_read(&quot;data/sfnh.geojson&quot;) # for &quot;Analysis Neighborhood&quot; boundaries sftrt &lt;- st_read(&quot;data/sftrt_clean.geojson&quot;) # for census tracts You can treat sf objects like data frames. # Overview of variables head(sfnh, 3) ## Simple feature collection with 3 features and 1 field ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: -122.4761 ymin: 37.70833 xmax: -122.3983 ymax: 37.79037 ## Geodetic CRS: WGS 84 ## nhood geometry ## 1 Western Addition MULTIPOLYGON (((-122.4214 3... ## 2 West of Twin Peaks MULTIPOLYGON (((-122.461 37... ## 3 Visitacion Valley MULTIPOLYGON (((-122.4039 3... # Transform an sf object into a simple one data frame (without geometries) sfnh_wo_geo &lt;- st_drop_geometry(sfnh) head(sfnh_wo_geo, 3) ## nhood ## 1 Western Addition ## 2 West of Twin Peaks ## 3 Visitacion Valley We can compare how San Francisco neighborhood boundaries differ by mapping them next to each other. In this tutorial, we will use ggplot for mapping. library(ggplot2) # Displaying geometry for &quot;analysis neighborhood&quot; boundaries sfnh_geo &lt;- ggplot() + geom_sf(data = sfnh, # add a layer to the plot using spatial data fill = &quot;grey&quot;, # set the fill color of the spatial features color = &quot;white&quot;, # set the color of boundaries size = 0.5) + # set the thickness of the boundary lines theme_void() # apply no background # Replicate the map using census tract boundaries sftrt_geo &lt;- ggplot() + geom_sf(data = sftrt, fill = &quot;grey&quot;, color = &quot;white&quot;, size = 0.5) + theme_void() # Combining maps ggpubr::ggarrange(sfnh_geo, sftrt_geo, ncol=2, labels = c(&quot;Analysis Neighborhood&quot;, &quot;2010 Census Tract&quot;) ) In my research, for example, I ask: How do Airbnb hosts use neighborhood names to market their properties? To answer this question, using census tract boundaries wouldn’t make much sense because they don’t carry meanings. Rather, it would be more suitable to use boundaries such as Analysis Neighborhood that are associated with meaningful labels. THINK AND SHARE Are you interested in conducting spatial analysis on nations, cities, regions, or neighborhoods? What spatial questions do you have about them? How will you define their boundaries? Want to learn more? New York Times Upshot report did a great job exploring New York City’s neighborhood boundaries using crowd-sourced data. They asked residents of New York City to demarcate neighborhood boundaries and identify their names. It provides a fascinating window to understand the sticky yet malleable nature of geographic boundaries. 2.2 Joining attributes Geographic boundaries alone don’t tell us much about what is social about them. Sociologists, and social scientists more broadly, often are interested in people in these places. Therefore, matching aggregated demographic data with the geographic boundaries is a crucial next step. We can merge a sf object with a data frame containing demographic attributes using the merge() function. # Import demographic attributes sfdem &lt;- read.csv(&quot;data/sfnh_dem.csv&quot;) # Check common identifier names(sfdem) ## [1] &quot;nhood&quot; &quot;pwhite&quot; &quot;pblack&quot; &quot;pasian&quot; &quot;phisp&quot; &quot;pwhite17&quot; &quot;pblack17&quot; ## [8] &quot;pasian17&quot; &quot;phisp17&quot; # Yes, in both data sets, &quot;nhood&quot; exists. # Join attributes to geometry sf_joined &lt;- merge( x = sfnh, # sf object; the returned object will be of the same type as x. y = sfdem, # data frame by.x = &quot;nhood&quot;, # x identifier by.y = &quot;nhood&quot;, # y identifier all.x = TRUE # keep all lines ) # Validate geometries sf_joined &lt;- st_make_valid(sf_joined) Now, we can explore neighborhood-level characteristics. library(dplyr) # Display the share of white population of neighborhoods sf_joined %&gt;% select(nhood, pwhite) ## Simple feature collection with 41 features and 2 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: -122.5149 ymin: 37.70813 xmax: -122.357 ymax: 37.8333 ## Geodetic CRS: WGS 84 ## First 10 features: ## nhood pwhite geometry ## 1 Bayview Hunters Point 5.657989 MULTIPOLYGON (((-122.3816 3... ## 2 Bernal Heights 38.517951 MULTIPOLYGON (((-122.4036 3... ## 3 Castro/Upper Market 77.062002 MULTIPOLYGON (((-122.4263 3... ## 4 Chinatown 10.417827 MULTIPOLYGON (((-122.4067 3... ## 5 Excelsior 16.997611 MULTIPOLYGON (((-122.4246 3... ## 6 Financial District/South Beach 60.342295 MULTIPOLYGON (((-122.3875 3... ## 7 Glen Park 60.722712 MULTIPOLYGON (((-122.4474 3... ## 8 Golden Gate Park 66.423358 MULTIPOLYGON (((-122.4426 3... ## 9 Haight Ashbury 74.872127 MULTIPOLYGON (((-122.4321 3... ## 10 Hayes Valley 58.273722 MULTIPOLYGON (((-122.4207 3... # Display the neighborhood named &quot;Mission&quot; sf_joined %&gt;% filter(nhood == &quot;Mission&quot;) ## Simple feature collection with 1 feature and 9 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: -122.4269 ymin: 37.74783 xmax: -122.403 ymax: 37.77564 ## Geodetic CRS: WGS 84 ## nhood pwhite pblack pasian phisp pwhite17 pblack17 pasian17 ## 1 Mission 32.5255 2.973325 11.01126 50.07308 41.09069 3.660031 14.46827 ## phisp17 geometry ## 1 35.66786 MULTIPOLYGON (((-122.411 37... # Display the share of white population of &quot;Mission&quot; sf_joined %&gt;% filter(nhood == &quot;Mission&quot;) %&gt;% select(pwhite) ## Simple feature collection with 1 feature and 1 field ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: -122.4269 ymin: 37.74783 xmax: -122.403 ymax: 37.77564 ## Geodetic CRS: WGS 84 ## pwhite geometry ## 1 32.5255 MULTIPOLYGON (((-122.411 37... # Export your joined sf object as a geojson file st_write(sf_joined, &quot;processed-data/sfnh_dem_joined.geojson&quot;, driver = &quot;GeoJSON&quot;, delete_dsn = TRUE # overwrite the existing file ) ## Deleting source `processed-data/sfnh_dem_joined.geojson&#39; using driver `GeoJSON&#39; ## Writing layer `sfnh_dem_joined&#39; to data source ## `processed-data/sfnh_dem_joined.geojson&#39; using driver `GeoJSON&#39; ## Writing 41 features with 9 fields and geometry type Multi Polygon. THINK AND SHARE Below, you see two maps, each representing Chicago ans Seattle. What are the geographic boundaries used in this figure? What attribute is displayed in the map? Is this attribute quantitative or qualitative? 2.3 Data visualization By joining attributes with spatial boundaries, we can map demographic patterns. When it comes to mapping, it is important to consider what type of variable you intend to display. In this tutorial, we will cover two different types of maps: Choropleth map for quantitative variables and Typology map for qualitative variables. 2.3.1 Choropleth map A choropleth map is useful for visualizing quantitative variables. This type of map displays color corresponding with an aggregated variable for a given geographic unit, such as population density or per-capital income. Below, this tutorial will walk you through how to create a demographic variable of interest, and visualize it using a choropleth map. In social science research, scholars often use the Herfindahl-Hirschman Index (HHI) as a measure for diversity. It is an economic index measuring the level of market competition/monopolization, but the formula is also used in ecology (called the Simpson diversity index), as well as in demographic contexts. The formula is: \\[ HHI = \\sum_{i=1}^{N} (MS_i)^2 \\] Where \\(MS_i\\) is the market share of firm \\(i\\) in the market, and \\(N\\) is the number of firms. The lower the HHI, the more competition in the market (many firms with relatively equal market shares). Reversely, the higher the HHI, the less competition in the market, suggesting monopoly. In demographic research, sociologists commonly use the HHI to measure racial diversity of neighborhoods. Instead of market share of firms in a market, we use the shares of racial groups in a neighborhood. For example, in a neighborhood with 4 racial groups each representing 25%, the HHI would be: \\[ 0.25^2 + 0.25^2 + 0.25^2 + 0.25^2 = 0.25 \\] Compared this to another neighborhood with 2 racial groups – one representing 80% and the other representing 20%. The HHI would be: \\[ 0.80^2 + 0.20^2 = 0.68 \\] The first neighborhood with the HHI of 25% is more diverse compared to the second neighborhood with the HHI of 68%. We can create this diversity measure using the variables we have. # Create the HHI sf_joined &lt;- sf_joined %&gt;% mutate(diversity = (pwhite^2 + pblack^2 + phisp^2 + pasian^2)/100) # Check sf_joined %&gt;% select(diversity) ## Simple feature collection with 41 features and 1 field ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: -122.5149 ymin: 37.70813 xmax: -122.357 ymax: 37.8333 ## Geodetic CRS: WGS 84 ## First 10 features: ## diversity geometry ## 1 30.41952 MULTIPOLYGON (((-122.3816 3... ## 2 29.24377 MULTIPOLYGON (((-122.4036 3... ## 3 60.80993 MULTIPOLYGON (((-122.4263 3... ## 4 72.94796 MULTIPOLYGON (((-122.4067 3... ## 5 33.48204 MULTIPOLYGON (((-122.4246 3... ## 6 42.47888 MULTIPOLYGON (((-122.3875 3... ## 7 41.08415 MULTIPOLYGON (((-122.4474 3... ## 8 48.51617 MULTIPOLYGON (((-122.4426 3... ## 9 57.51691 MULTIPOLYGON (((-122.4321 3... ## 10 39.00489 MULTIPOLYGON (((-122.4207 3... To create a choropleth map, we first have to check the statistical distribution of the variable. hist(sf_joined$diversity) There are various methods to determine how you classify colors. The most common methods are quantile binning, natural breaks (jenks), standard deviation, and custom breaks (defined by the researcher). Below, I use the quantile binning and create a map displaying how diverse/homogeneous San Francisco neighborhoods are. # Create a choropleth map visualizing the diversity variable ggplot() + geom_sf(data = sf_joined, # specify the source of spatial data aes(fill = diversity), # add a layer to use &quot;diversity&quot; to fill colors size = 0.2, color = &quot;white&quot;) + scale_fill_distiller(type=&quot;seq&quot;, # fill in sequential colors palette = &quot;Greys&quot;, breaks = quantile(sf_joined$diversity), direction = -1, # 1 for low (light) to high (dark), -1 for reverse ) + theme_void() + labs(fill = &quot;HHI&quot;, # add a label for legend title = &quot;Racial Diversity in San Francisco&quot; # figure title ) What are the least diverse neighborhoods? What are the most diverse neighborhoods? For those who are not familair with San Francisco neighborhoods, we can add labels displaying neighborhood names corresponding to neighborhood boundaries. # Add labels to the map ggplot() + geom_sf(data = sf_joined, aes(fill = diversity), size = 0.2, color = &quot;white&quot;) + scale_fill_distiller(type=&quot;seq&quot;, palette = &quot;Greys&quot;, breaks = quantile(sf_joined$diversity), direction = -1, ) + geom_sf_label(data = sf_joined, aes(label = nhood), # add a layer of labels using the nhood variable size = 1.5, # size of the label text color = &quot;black&quot;, # color of the text fill = &quot;white&quot;, # background fill color label.padding = unit(0.1, &quot;lines&quot;), # padding around the text label.size = 0, # thickness of the border around the label alpha = 0.5, # set transparency of the background check_overlap = TRUE) + # suppress overlapping texts theme_void() + labs(fill = &quot;HHI&quot;, # add a label for legend title = &quot;Gentrification in San Francisco&quot; # figure title ) ## Warning in layer_sf(data = data, mapping = mapping, stat = stat, geom = ## GeomLabel, : Ignoring unknown parameters: `check_overlap` ## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not ## give correct results for longitude/latitude data 2.3.2 Typology map A typology map is suitable for qualitative variables that consist distinct and meaningful categories. We will create a gentrification measure to demonstrate a use case for typology map. Gentrification is a phenomenon that we measure over space and time. While there are multiple ways to define and measure gentrification, for the purposes of this tutorial, we will conceptualize gentrification as a neighborhood-level socioeconomic transformation comprised of both an influx of middle-and upper-class residents and an increase in housing prices in previously low-income, urban neighborhoods. Our measure of gentrification is calculated at the census tract level from 2000 to 2020, so that we can examine how the socioeconomic composition of neighborhoods in San Francisco changes over time. The four variables listed below are used in our categorical measure of gentrification: Median household income (in 2020 Dollars) Percent of college-educated residents Median home value (in 2020 Dollars) Median gross rent (in 2020 Dollars) The first step in computing the gentrification measure is determining whether or not a tract is eligible to gentrify (i.e., Gentrifiable). Generally, researchers consider tracts eligible to gentrify if they are relatively low-income neighborhoods such that they could undergo the revitalization that characterizes gentrification. We will operationalize eligibility to gentrify in a binary fashion using the median household income. Not Gentrifiable: Census tracts had a median household income above the city-wide median household income at the start of the period. Gentrifiable: Census tracts had a median household income below the city-wide median household income at the start of the period. Next, among the census tracts that were Gentrifiable, we must determine if they were gentrifying over time or not. To classify the gentrifiable tracts as gentrifying or not gentrifying, we will need to calculate how much socioeconomic change and housing value change the tract experienced over the decade and compare the rate of change to the rate in the city. Gentrifying: Gentrifiable census tracts that had the socioeconomic status of their residents (i.e., % college graduates OR median household income) grow faster than the city wide-median AND the home values (median home value OR median gross rent value) grow faster than the city-wide median over the decade period. Not Gentrifying: Gentrifiable census tracts that did NOT experience growth in the socioeconomic status of their residents AND their home values at a rate higher than the city-wide median values over the decade period. This measurement strategy results in a three-category gentrification measure - Not Gentrifiable, Gentrifying, and Not Gentrifying. With these three categories we can make a typology map of census tracts in San Francisco. # Import demographic attributes for census tracts sftrt_dem &lt;- read.csv(&quot;data/sftrt_dem.csv&quot;) # Check if it has a common identifier with sftrt head(sftrt_dem$trt10) ## [1] 10100 10200 10300 10400 10500 10600 class(sftrt_dem$trt10) ## [1] &quot;integer&quot; head(sftrt$tractce10) ## [1] &quot;016400&quot; &quot;016100&quot; &quot;015900&quot; &quot;015500&quot; &quot;015300&quot; &quot;015100&quot; class(sftrt$tractce10) ## [1] &quot;character&quot; # Fill with leading zeros and convert to string sftrt_dem &lt;- sftrt_dem %&gt;% mutate(tractce10 = as.character(sprintf(&quot;%06d&quot;, trt10))) # Join demographic data with geometric boundaries sftrt_joined &lt;- merge( x = sftrt, # sf object y = sftrt_dem, # data frame by.x = &quot;tractce10&quot;, # x identifier by.y = &quot;tractce10&quot;, # y identifier all.x = TRUE, # keep all lines ) # Create a typology map ggplot(data = sftrt_joined) + geom_sf(aes(fill = gentcat), size = 0.02, color = &quot;white&quot;) + scale_fill_manual(values = c(&quot;non-gentrifiable&quot; = &quot;light grey&quot;, &quot;gentrifying&quot; = &quot;pink&quot;, &quot;non-gentrifying&quot; = &quot;black&quot;)) + # specify color corresponding to each category theme_void() + labs(fill = &quot;Gentrification Category&quot;, title = &quot;Gentrification in San Francisco&quot; ) Name two or more neighborhoods that are gentrifying neighborhoods. Name two or more neighborhoods that are not gentrifying. Is there a relationship between gentrification and racial diversity in San Francisco? "],["from-people-to-built-environment.html", "Chapter 3 From People to Built Environment 3.1 Transforming Airbnbs 3.2 Geocoding Restaurants 3.3 Spatial join 3.4 Export Maps", " Chapter 3 From People to Built Environment So far, we have focused on embedding demographic data into places. However, sociological questions beyond people. People don’t just exist in places but they interact with the built environment, such as schools, local businesses, landmarks, and so forth. In GIS terms, this type of data can be called point-of-interest (POI), meaning a specific point location or useful site, defined by geographical coordinates (latitude and longitude). In this tutorial, we will use Airbnb and local business data as an example of point-of-interest data. 3.1 Transforming Airbnbs When the data contains the latitude and longitude, we can simply transform it to sf object by using “st_as_sf” command. We will use the San Francisco Airbnb data to illustrate this case. Unlike neighborhood boundaries of which geometries were polygons, these geometries will be points. # Import the Airbnb data sfbnb &lt;- read.csv(&quot;data/sfbnb.csv&quot;) # Transform lat/long data into sf object sf_sfbnb &lt;- st_as_sf(sfbnb, coords = c(&quot;longitude&quot;, &quot;latitude&quot;), crs = 4326 # specify the projection; WGS84 is a standard projection for global mapping. ) # Check variables head(sf_sfbnb, n=3) ## Simple feature collection with 3 features and 7 fields ## Geometry type: POINT ## Dimension: XY ## Bounding box: xmin: -122.4525 ymin: 37.74511 xmax: -122.421 ymax: 37.76931 ## Geodetic CRS: WGS 84 ## id trt10 analysis property_type review_scores_rating ## 1 958 16700 haight ashbury Apartment 97 ## 2 5858 25300 bernal heights Apartment 98 ## 3 7918 17102 haight ashbury Apartment 85 ## review_scores_location number_of_reviews geometry ## 1 10 176 POINT (-122.4339 37.76931) ## 2 10 111 POINT (-122.421 37.74511) ## 3 9 17 POINT (-122.4525 37.76669) You can see that geometry is points, rather than polygons. Each point represents an Airbnb property (id- unique identifier). It also indicates the census tract (trt10) and neighborhood name (analysis) in which the Airbnb property is located. The data also contains attributes of the Airbnb property, such as property type, review score ratings, and the number of reviews. # Export the Airbnb data as a geojson file st_write(sf_sfbnb, &quot;processed-data/airbnbs.geojson&quot;, driver = &quot;GeoJSON&quot;, delete_dsn = TRUE) 3.2 Geocoding Restaurants Sometimes, your data may not have the latitude and longitude information. Instead, the data may contain street addresses. In such a case, we have to perform geocoding which converts formatted addresses into latitude and longitude, so that we can displayed as a point on a map. Below, we use the restaurant data in San Francisco to demonstrate the geocoding process. # Import restaurant data sfbiz &lt;- read.csv(&quot;data/sfbiz_clean.csv&quot;) # Check if lat and lon exists head(sfbiz, 3) ## company address_line_1 city zipcode ## 1 JOHN&#39;S GRILL 63 ELLIS ST SAN FRANCISCO 94102 ## 2 TAD&#39;S STEAKHOUSE 120 POWELL ST SAN FRANCISCO 94102 ## 3 SAM&#39;S GRILL &amp; SEA FOOD RSTRNT 374 BUSH ST SAN FRANCISCO 94104 ## naics8_descriptions employee_size_location sales_volume_location state ## 1 FULL-SERVICE RESTAURANTS 20 1424 CA ## 2 FULL-SERVICE RESTAURANTS 19 1353 CA ## 3 FULL-SERVICE RESTAURANTS 35 2491 CA In this data, we can see that latitude and longitude does not exist. However, it contains street address, city, state, and zip code. To carry out geocoding, first, we have to create a field that displays a full address. Based on the full address, we can get the latitude and longitude via open street map (osm). Once the data is geocoded, we can transform this data frame to sf object for mapping. # Set up library(tidygeocoder) # Create a full address field (street address, city, state, zipcode) sfbiz &lt;- sfbiz %&gt;% mutate(full_add = paste(address_line_1, city, state, zipcode, sep = &quot;, &quot;)) # Geocode the full address geocoded_sfbiz &lt;- sfbiz %&gt;% sample_n(5) %&gt;% # the full data can take a while, so let&#39;s try on a smaller sample geocode(address = full_add, method = &#39;osm&#39;) # Check the geocoded data geocoded_sfbiz %&gt;% select(lat, long) ## # A tibble: 5 × 2 ## lat long ## &lt;dbl&gt; &lt;dbl&gt; ## 1 37.8 -122. ## 2 37.8 -122. ## 3 37.8 -122. ## 4 37.7 -122. ## 5 37.8 -122. # For the purpose of this tutorial, we can use the prepared, full geocoded data prep_sfbiz &lt;- read.csv(&quot;data/geocoded_sfbiz_clean.csv&quot;) # Transform lat/long data into sf oject sf_sfbiz &lt;- st_as_sf(prep_sfbiz, coords = c(&quot;long&quot;, &quot;lat&quot;), crs = 4326) # Export the restaurant data as a geojson file st_write(sf_sfbiz, &quot;processed-data/restaurants.geojson&quot;, driver = &quot;GeoJSON&quot;, delete_dsn = TRUE) Now that we have restaurant locations as points, we can simply overlay the restaurant locations on top of the neighborhood boundaries layer. # Plot the restaurant locations ggplot() + # display neighborhood boundaries as a layer geom_sf(data = sfnh, fill = &quot;lightgray&quot;, size = 0.02, color = &quot;white&quot; ) + # add restaurants as another layer geom_sf(data = sf_sfbiz, color = &quot;red&quot;, size = 0.5, alpha = 0.8 ) + # Plot restaurants theme_void() + labs(title = &quot;Restaurants in San Francisco&quot;) In this map, we can see the distribution of restaurants in San Francisco. However, because restaurants are both in and outside of neighborhood boundaries, it is hard to discern spatial patterns of restaurants by neighborhoods. Spatial join, which we will discuss in the next section, allows us to spatially link restaurants to neighborhoods, so that we can reduce points data to the level of neighborhoods. 3.3 Spatial join Spatial join allows you to combine two sf objects based on the spatial relationship between their geometries. For example, we can think of the relationship between neighborhoods (polygons) and restaurants (points). Neighborhoods (x) contain restaurants (y), or restaurants (x) are within neighborhoods (y). # Before joining, check if they have the same projections st_crs(sfnh) == st_crs(sf_sfbiz) ## [1] TRUE # Perform spatial join nh_joined &lt;- st_join(x = sfnh, # join y = sf_sfbiz, # target join = st_contains, # does x(polygon) contains y(point)? left = TRUE) # keep all neighborhoods # Explore head(nh_joined, 3) ## Simple feature collection with 3 features and 10 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: -122.4428 ymin: 37.77644 xmax: -122.4202 ymax: 37.79037 ## Geodetic CRS: WGS 84 ## nhood company address_line_1 ## 1 Western Addition HINATA SUSHI 810 VAN NESS AVE ## 1.1 Western Addition BURGER KING 819 VAN NESS AVE ## 1.2 Western Addition ISTITUTO ITALIANO DI CULTURA 601 VAN NESS AVE # F ## city zipcode naics8_descriptions employee_size_location ## 1 SAN FRANCISCO 94109 FULL-SERVICE RESTAURANTS 6 ## 1.1 SAN FRANCISCO 94109 FULL-SERVICE RESTAURANTS 58 ## 1.2 SAN FRANCISCO 94102 FULL-SERVICE RESTAURANTS 6 ## sales_volume_location state full_add ## 1 427 CA 810 VAN NESS AVE, SAN FRANCISCO, CA, 94109 ## 1.1 2447 CA 819 VAN NESS AVE, SAN FRANCISCO, CA, 94109 ## 1.2 427 CA 601 VAN NESS AVE # F, SAN FRANCISCO, CA, 94102 ## geometry ## 1 MULTIPOLYGON (((-122.4214 3... ## 1.1 MULTIPOLYGON (((-122.4214 3... ## 1.2 MULTIPOLYGON (((-122.4214 3... In the joined data, we can see that restaurants (company) are nested within neighborhoods (nhood). We can aggregate this data to the neighborhood level and get the number of restaurants per neighborhood. Some neighborhoods may not any have restaurants, so you want to preserve that as 0 and not count as 1. # Count restaurants per neighborhood restaurant_counts &lt;- nh_joined %&gt;% st_drop_geometry() %&gt;% group_by(nhood) %&gt;% summarize(n_rst = sum(!is.na(company)), # don&#39;t count NA as 1 ) As the count of restaurants is a quantitative variable, we can visualize it using the choropleth map. I first join the restaurant counts data with neighborhood boundaries to get the neighborhood-level spatial data. Then, I create the map using custom breaks based on the distribution of the number of restaurants within a neighborhood. # Join the restaurant count to neighborhood boundaries biz_colors &lt;- sfnh %&gt;% left_join(restaurant_counts, by = &quot;nhood&quot;) %&gt;% arrange(desc(n_rst)) # Create the map using Custom breaks ggplot() + geom_sf(data = biz_colors, aes(fill = n_rst), size = 0.2, color = &quot;white&quot;) + scale_fill_distiller(type=&quot;seq&quot;, palette = &quot;Greys&quot;, breaks = c(50, 150, 250), # specify custom breaks direction = 1, ) + theme_void() + labs(fill = &quot;Restaurant Count&quot;) Another way of visualizing a quantitative variable is a proportional symbol map. Proportional symbol maps are particularly useful for absolute quantitative variables (e.g., raw counts, measurements) while choropleth maps are more suitable for relative quantitative variables (e.g., ratios, percentages, proportions). # Create neighborhood centroids nh_cent &lt;- st_centroid(sfnh, of_largest_polygon = TRUE) ## Warning: st_centroid assumes attributes are constant over geometries # Join the restaurant counts to neighborhood centroids biz_symbols &lt;- nh_cent %&gt;% left_join(restaurant_counts, by = &quot;nhood&quot;) %&gt;% arrange(desc(n_rst)) # sort to ensure small points would be plotted in front of big points # Create the proportional symbol map ggplot() + geom_sf(data = sfnh, # add a base map layer of boundaries fill = &quot;lightgray&quot;, size = 0.02, color = &quot;white&quot; ) + geom_sf(data = biz_symbols, aes(size = n_rst), # add a layer of symbols sized based on the restaurant counts shape = 21, # specify a circle shape for symbols fill = &quot;red&quot;, # set a color to fill the shape alpha = 0.6, # set a level of transparency color = &quot;lightgray&quot;) + # set a color for edges of the shape scale_size(range = c(3, 13)) + # set min and max for the size of the symbols theme_void() + labs(size = &quot;Restaurant Count&quot;) # legend title # Create the proportional symbol map (size) combined with the choropleth map (fill color) ggplot() + geom_sf(data = sfnh, fill = &quot;lightgray&quot;, size = 0.02, color = &quot;white&quot; ) + geom_sf(data = biz_symbols, aes(size = n_rst, fill = n_rst), shape = 21, color = &quot;lightgray&quot;) + scale_size(range = c(3, 10)) + # add colors to the symbols scale_fill_gradientn(colors = hcl.colors(4, # fill the shape with four different colors &quot;RdBu&quot;, # red-blue color scheme rev = TRUE, # reverse the color scheme so that smaller values are blue alpha = 0.9)) + # transparency theme_void() + labs(fill = &quot;Restaurant Count&quot;, size = &quot;Restaurant Count&quot;) + # combined legend title guides(fill = guide_legend(title = &quot;Restaurant Count&quot;, order = 1), # title for the legend size = guide_legend(title = &quot;Restaurant Count&quot;, order = 1)) # same title for size 3.4 Export Maps Now, let’s say you are ready export your maps for publication. We will publish a figure of two maps side by side, displaying two ways of visualizing the distribution of restaurant by neighborhood in San Francisco. # Store and combine maps map1 &lt;- ggplot() + geom_sf(data = sfnh, fill = &quot;lightgray&quot;, size = 0.02, color = &quot;white&quot; ) + geom_sf(data = sf_sfbiz, color = &quot;red&quot;, size = 0.5, alpha = 0.8 ) + theme_void() map2 &lt;- ggplot() + geom_sf(data = biz_colors, aes(fill = n_rst), size = 0.2, color = &quot;white&quot;) + scale_fill_distiller(type=&quot;seq&quot;, palette = &quot;Greys&quot;, breaks = c(50, 150, 250), direction = 1, ) + theme_void() + theme(legend.position = &quot;none&quot;) map3 &lt;- ggplot() + geom_sf(data = sfnh, fill = &quot;lightgray&quot;, size = 0.02, color = &quot;white&quot; ) + geom_sf(data = biz_symbols, aes(size = n_rst), shape = 21, fill = &quot;red&quot;, alpha = 0.6, color = &quot;lightgray&quot;) + scale_size(range = c(3, 13)) + theme_void() + labs(size = &quot;Restaurant Count&quot;) map4 &lt;- ggplot() + geom_sf(data = sfnh, fill = &quot;lightgray&quot;, size = 0.02, color = &quot;white&quot; ) + geom_sf(data = biz_symbols, aes(size = n_rst, fill = n_rst), shape = 21, color = &quot;lightgray&quot;) + scale_size(range = c(3, 10)) + # add colors to the symbols scale_fill_gradientn(colors = hcl.colors(4, &quot;RdBu&quot;, rev = TRUE, alpha = 0.9)) + theme_void() + labs(fill = &quot;Restaurant Count&quot;, size = &quot;Restaurant Count&quot;) + guides(fill = guide_legend(title = &quot;Restaurant Count&quot;, order = 1), size = guide_legend(title = &quot;Restaurant Count&quot;, order = 1)) combined &lt;- ggpubr::ggarrange(map1, map2, map3, map4, nrow=2, ncol=2, labels = c(&quot;Point Map&quot;, &quot;Choropleth Map&quot;, &quot;PropSymbol Map&quot;, &quot;PSxC Map&quot;)) print(combined) # Export the combined map ggsave(&quot;sf_restaurant_maps.png&quot;, plot = combined, width = 9, height = 9, dpi = 300 # resolution ) While it is not strictly expected in sociology papers, you can also add a north arrow and a scale bar to a map using the ggspatial package. library(ggspatial) # Adding a scale bar and a north arrow ggplot() + geom_sf(data = biz_colors, aes(fill = n_rst), size = 0.2, color = &quot;white&quot;) + scale_fill_distiller(type = &quot;seq&quot;, palette = &quot;Greys&quot;, breaks = c(50, 150, 250), direction = 1) + theme_void() + labs(fill = &quot;Restaurant Count&quot;) + # add a scale bar annotation_scale(location = &quot;bl&quot;, # &quot;br&quot; is for bottom right, adjust as needed pad_y = unit(0.01, &quot;cm&quot;) # place the scale bar close to the bottom ) + # add a north arrow annotation_north_arrow(location = &quot;tl&quot;, # &quot;tl&quot; is for top left, adjust as needed style = north_arrow_fancy_orienteering) "],["additional-topics.html", "Chapter 4 Additional Topics", " Chapter 4 Additional Topics While we have focused on aggregated demographic data and POI data in this tutorial, the use case of spatial data and mapping is by no means limited to these topics. Sociologists leverage spatial data to study numerous topics, especially with the expansion of open access GIS data sources. Some topics include but are not limited to: Crime patterns Voting behaviors Environmental and climate issues Local zoning and urban policies Moreover, digital trace data with geotags are also emerging sources of spatial data, enabling researchers to study texts and images associated with particular geographies. Think about all the reviews on Google Maps, images with location information on Instagram, and geotagged posts on X (ex-Twitter). It is fascinating to think about how the new technologies mediate the ways in which people imagine and experience places. With all the tools you learned from this class, you will now be able to start tackling some of these questions yourself! "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
